<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>