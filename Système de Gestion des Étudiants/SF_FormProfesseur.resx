<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>